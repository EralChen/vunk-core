import{d as s,o as n,c as t,a as e}from"./chunk-BIt-4EX2.js";import"./chunk-B3cmQ3xr.js";const o=e("li",null,[e("span",null,"bindPropsFactory: "),e("span",null," 根据静态 props 对象生成一个函数。 这个函数可以在运行时，传入 vm.props 生成 静态 props 对应的 ComputedRef props ")],-1),l=e("li",null,[e("span",null,"onEmitsFactory: "),e("span",null," 根据静态 emits 对象生成一个函数。 这个函数可以在运行时，传入 ctx.emit 生成 静态 emits 对应的 emit 方法 ")],-1),p=e("li",null,[e("span",null,"presetRef: "),e("span",null,"传入 value, cb. 这个 Ref 被赋值之前会经过 cb 函数处理")],-1),a=[o,l,p],m=s({__name:"basic",setup(c){return(r,i)=>(n(),t("ul",null,a))}});export{m as default};
