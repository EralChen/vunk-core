import{d as f,r as n,n as r,o as k,s as v,w as o,j as i,t as c,k as s,b as p,R as V,S as h,P as x}from"./chunk-BKN-bbEl.js";import"./chunk-B3cmQ3xr.js";const g=f({__name:"tree",setup(C){const a=n({}),t=n([{id:4},{id:5},{id:6},{id:7}]);Promise.resolve().then(()=>{t.value=[{id:4},{id:5},{id:6},{id:7}]}).then(()=>{t.value=[{id:4},{id:5},{id:6},{id:7}]});const u=d=>{console.log(d)};return(d,l)=>{const _=r("el-tree"),m=r("VkDuplex");return k(),v(m,{withFlex:"both",gap:"16px"},{default:o(()=>[i(c(a.value)+" ",1),s(p(V),{modelValue:a.value,"onUpdate:modelValue":[l[0]||(l[0]=e=>a.value=e),u]},{default:o(()=>[s(_,{data:t.value,props:{children:"children",label:"id",isLeaf:"isLeaf"}},{default:o(({data:e})=>[s(p(h),{name:e},{default:o(()=>[i(c(e),1)]),_:2},1032,["name"])]),_:1},8,["data"])]),_:1},8,["modelValue"])]),_:1})}}}),w=x(g,[["__scopeId","data-v-785489e1"]]);export{w as default};
