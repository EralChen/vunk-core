import{d as m,r as f,o as g,c as h,t as d}from"./chunk-BIt-4EX2.js";import"./chunk-B3cmQ3xr.js";function p(...l){const r=Array.from({length:l.length}).map(()=>[]),o=Array.from({length:l.length}).fill(0),i=l.map((t,e)=>(...n)=>{const s=o[e],c=r[e][s];if(c){if(c.status==="fulfilled")return c.value;if(c.status==="rejected")return c.reason}else throw t(...n).then(u=>{r[e][s]={status:"fulfilled",value:u,reason:null},o[e]++},u=>{r[e][s]={status:"rejected",value:null,reason:u},o[e]++})});function a(t){try{t(...i)}catch(e){if(e instanceof Promise){const n=()=>{o.fill(0),a(t)};e.then(n,n)}}}return a}const j=m({__name:"sync",setup(l){function r(){return new Promise((t,e)=>{console.log("getA"),setTimeout(()=>{t("a")},1e3)})}function o(){return new Promise((t,e)=>{console.log("getB"),setTimeout(()=>{t(2)},2e3)})}function i(t){return new Promise((e,n)=>{setTimeout(()=>{e(t)},1e3)})}p(r,o,i)((t,e)=>{console.log("syncExc");const n=t(),s=e();console.log(n,s)});const a=f("");return(t,e)=>(g(),h("div",null,d(a.value),1))}});export{j as default};
